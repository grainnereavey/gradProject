{"ast":null,"code":"import _classCallCheck from \"/Users/grainnereavey/Documents/gradProject/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/grainnereavey/Documents/gradProject/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/grainnereavey/Documents/gradProject/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/grainnereavey/Documents/gradProject/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/grainnereavey/Documents/gradProject/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/grainnereavey/Documents/gradProject/src/components/AddressDetailsForm.js\";\nimport React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, Col, Grid, Row, Button, ButtonToolbar, ToggleButtonGroup } from 'react-bootstrap';\n\nvar AddressDetailsForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(AddressDetailsForm, _Component);\n\n  function AddressDetailsForm(props) {\n    var _this;\n\n    _classCallCheck(this, AddressDetailsForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(AddressDetailsForm).call(this, props));\n\n    _this._showMessage = function (bool) {\n      _this.setState({\n        showMessage: bool\n      });\n    };\n\n    _this.state = {\n      apt: '',\n      streetAddress: '',\n      city: '',\n      state: '',\n      time: '',\n      showMessage: false\n    };\n    return _this;\n  }\n\n  _createClass(AddressDetailsForm, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 30\n        },\n        __self: this\n      }, React.createElement(Row, {\n        className: \"show-grid\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, React.createElement(Col, {\n        xs: 2,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, \" \"), React.createElement(Col, {\n        xs: 12,\n        md: 8,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, \" Where do you live, \", this.props.values.firstName, \"? \"), React.createElement(\"form\", {\n        onSubmit: this.props.onSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, \"*Street Address: \"), React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter Street Address\",\n        onChange: this.props.onChange,\n        name: \"streetAddress\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"Apt/Unit #: \"), React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter Apt/Unit #\",\n        onChange: this.props.onChange,\n        name: \"apt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"*City: \"), React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        onChange: this.props.onChange,\n        name: \"city\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formControlsSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70\n        },\n        __self: this\n      }, \"*State: \"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        name: \"state\",\n        onChange: this.props.onChange,\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, \"Choose a State\"), React.createElement(\"option\", {\n        value: this.props.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, \"California\"), React.createElement(\"option\", {\n        value: this.props.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }, \"Texas\"), React.createElement(\"option\", {\n        value: this.props.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, \"Illnois\"))), React.createElement(ButtonToolbar, {\n        id: \"twoYearsQuestion\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, \"*Have you lived at this address for more than 2 years?\"), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(ToggleButtonGroup, {\n        type: \"radio\",\n        name: \"years\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        onClick: this._showMessage.bind(null, true),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, \"No\"), React.createElement(\"button\", {\n        onClick: this._showMessage.bind(null, false),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87\n        },\n        __self: this\n      }, \"Yes\"), this.state.showMessage && React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, \"*Street Address: \"), React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter Street Address\",\n        onChange: this.props.onChange,\n        name: \"prevStreetAddress\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"Apt/Unit #: \"), React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter Apt/Unit #\",\n        onChange: this.props.onChange,\n        name: \"prevApt\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formBasicText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 110\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, \"*City: \"), React.createElement(FormControl, {\n        type: \"text\",\n        placeholder: \"Enter City\",\n        onChange: this.props.onChange,\n        name: \"prevCity\",\n        required: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        controlId: \"formControlsSelect\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(ControlLabel, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, \"*State: \"), React.createElement(FormControl, {\n        componentClass: \"select\",\n        name: \"prevState\",\n        onChange: this.props.onChange,\n        required: \"required\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"option\", {\n        selected: true,\n        disabled: true,\n        value: \"\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }, \"Choose a State\"), React.createElement(\"option\", {\n        value: this.props.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 130\n        },\n        __self: this\n      }, \"California\"), React.createElement(\"option\", {\n        value: this.props.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131\n        },\n        __self: this\n      }, \"Texas\"), React.createElement(\"option\", {\n        value: this.props.state,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 132\n        },\n        __self: this\n      }, \"Illnois\"))), \";\")), React.createElement(ButtonToolbar, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(Button, {\n        bsStyle: \"primary\",\n        type: \"submit\",\n        value: \"Submit\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, \"Save and Continue\")))), React.createElement(Col, {\n        xs: 2,\n        md: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return AddressDetailsForm;\n}(Component);\n\nexport { AddressDetailsForm as default };","map":{"version":3,"sources":["/Users/grainnereavey/Documents/gradProject/src/components/AddressDetailsForm.js"],"names":["React","Component","FormGroup","ControlLabel","FormControl","Col","Grid","Row","Button","ButtonToolbar","ToggleButtonGroup","AddressDetailsForm","props","_showMessage","bool","setState","showMessage","state","apt","streetAddress","city","time","values","firstName","onSubmit","onChange","bind"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { FormGroup, ControlLabel, FormControl, Col, Grid, Row, Button, ButtonToolbar, ToggleButtonGroup } from 'react-bootstrap';\n\n\nexport default class AddressDetailsForm extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            apt: '',\n            streetAddress: '',\n            city: '',\n            state: '',\n            time: '',\n            showMessage: false\n        }\n    };\n\n    _showMessage = (bool) => {\n        this.setState({\n            showMessage: bool\n        })\n    };\n\n    render() {\n\n        return (\n\n            <div>\n                <Grid>\n                    <Row className=\"show-grid\">\n                        <Col xs={2} md={2}> </Col>\n                        <Col xs={12} md={8}>\n\n                            <h2> Where do you live, {this.props.values.firstName}? </h2>\n\n                            <form onSubmit={this.props.onSubmit}>\n                                <FormGroup\n                                    controlId=\"formBasicText\">\n                                    <ControlLabel>*Street Address: </ControlLabel>\n                                    <FormControl\n                                        type=\"text\"\n                                        placeholder=\"Enter Street Address\"\n                                        onChange={this.props.onChange}\n                                        name=\"streetAddress\"\n                                        required />\n                                </FormGroup>\n                                <FormGroup\n                                    controlId=\"formBasicText\">\n                                    <ControlLabel>Apt/Unit #: </ControlLabel>\n                                    <FormControl\n                                        type=\"text\"\n                                        placeholder=\"Enter Apt/Unit #\"\n                                        onChange={this.props.onChange}\n                                        name=\"apt\"\n                                    />\n                                </FormGroup>\n                                <FormGroup\n                                    controlId=\"formBasicText\">\n                                    <ControlLabel>*City: </ControlLabel>\n                                    <FormControl\n                                        type=\"text\"\n                                        placeholder=\"Enter City\"\n                                        onChange={this.props.onChange}\n                                        name=\"city\"\n                                        required />\n                                </FormGroup>\n                                <FormGroup\n                                    controlId=\"formControlsSelect\">\n                                    <ControlLabel>*State: </ControlLabel>\n                                    <FormControl\n                                        componentClass=\"select\"\n                                        name=\"state\"\n                                        onChange={this.props.onChange}\n                                        required='required'>\n                                        <option selected disabled value=''>Choose a State</option>\n                                        <option value={this.props.state}>California</option>\n                                        <option value={this.props.state}>Texas</option>\n                                        <option value={this.props.state}>Illnois</option>\n                                    </FormControl>\n                                </FormGroup>\n                                <ButtonToolbar id=\"twoYearsQuestion\">\n                                    <ControlLabel>*Have you lived at this address for more than 2 years?</ControlLabel>\n                                    <br></br>\n                                    <ToggleButtonGroup type=\"radio\" name=\"years\">\n                                        <button onClick={this._showMessage.bind(null, true)}>No</button>\n                                        <button onClick={this._showMessage.bind(null, false)}>Yes</button>\n                                        {this.state.showMessage &&\n                                            (<div>\n                                                <FormGroup\n                                                    controlId=\"formBasicText\">\n                                                    <ControlLabel>*Street Address: </ControlLabel>\n                                                    <FormControl\n                                                        type=\"text\"\n                                                        placeholder=\"Enter Street Address\"\n                                                        onChange={this.props.onChange}\n                                                        name=\"prevStreetAddress\"\n                                                        required />\n                                                </FormGroup>\n                                                <FormGroup\n                                                    controlId=\"formBasicText\">\n                                                    <ControlLabel>Apt/Unit #: </ControlLabel>\n                                                    <FormControl\n                                                        type=\"text\"\n                                                        placeholder=\"Enter Apt/Unit #\"\n                                                        onChange={this.props.onChange}\n                                                        name=\"prevApt\"\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup\n                                                    controlId=\"formBasicText\">\n                                                    <ControlLabel>*City: </ControlLabel>\n                                                    <FormControl\n                                                        type=\"text\"\n                                                        placeholder=\"Enter City\"\n                                                        onChange={this.props.onChange}\n                                                        name=\"prevCity\"\n                                                        required\n                                                    />\n                                                </FormGroup>\n                                                <FormGroup\n                                                    controlId=\"formControlsSelect\">\n                                                    <ControlLabel>*State: </ControlLabel>\n                                                    <FormControl\n                                                        componentClass=\"select\"\n                                                        name=\"prevState\"\n                                                        onChange={this.props.onChange}\n                                                        required='required' />\n                                                    <option selected disabled value=''>Choose a State</option>\n                                                    <option value={this.props.state}>California</option>\n                                                    <option value={this.props.state}>Texas</option>\n                                                    <option value={this.props.state}>Illnois</option>\n                                                </FormGroup>\n\n                                            \n                                            </div>)\n                                            };\n                                    </ToggleButtonGroup>\n                                </ButtonToolbar>\n\n                                <ButtonToolbar>\n                                    <Button bsStyle=\"primary\" type=\"submit\" value=\"Submit\">Save and Continue</Button>\n                                </ButtonToolbar>\n                            </form>\n\n                        </Col>\n                        <Col xs={2} md={2}></Col>\n                    </Row>\n\n                </Grid>\n\n            </div>\n        );\n    }\n}\n\n"]},"metadata":{},"sourceType":"module"}